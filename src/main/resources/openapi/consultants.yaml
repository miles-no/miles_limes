openapi: 3.0.3
info:
  title: Miles consultants api
  description: |-
    The purpose of this API is to be a proxy/wrapper for the CV partner api. It exposes several endpoints for 
    retrieving information about the consultants and offices from CV partner.
  version: 0.1.0
servers:
  - url: https://someappname.heruko.com
tags:
  - name: consultants
    description: |
      Retrieve information about consultants and offices from CV partner.
paths:
  /consultants:
    get:
      tags:
        - consultants
      summary: Get consultants with optional filtering for office(s), role(s) and email
      description: |
        Get consultants with optional filtering for office(s), role(s) and email.
        
        if multiple offices are given, all consultants belonging to any of the given offices is returned. The same is 
        true for roles and email. 
        
        When filters for several of "office", "role" and "email" is given the returned consultants 
        must match all filtering conditions. i.e (any office in filter) && (any role in filter) && (any email in filter)
      operationId: getConsultants
      parameters:
        - name: officeId
          in: query
          description: Office Id
          required: false
          schema:
            type: array
            items:
              type: string
        - name: role
          in: query
          description: Role name
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Role'
        - name: email
          in: query
          description: email of consultant
          required: false
          schema:
            type: array
            items:
              type: string
              format: email
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConsultantResponse'
        '400':
          description: Bad Request
        403:
          description: Forbidden
  /consultants/{consultantEmail}:
    get:
      tags:
        - consultants
      summary: Get single consultant
      description: Get single consultant
      operationId: getConsultant
      parameters:
        - in: path
          name: consultantEmail
          schema:
            $ref: '#/components/schemas/ConsultantEmail'
          required: true
          description: consultant email
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultant'
  /consultants/offices:
    get:
      tags:
        - consultants
      summary: Get list of offices
      description: Get list of offices
      operationId: getOffices
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfficesResponse'
security:
  - app_key: [ ]
components:
  schemas:
    GetConsultantResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Consultant'
      required:
        - list
    Consultant:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        telephone:
          type: string
        office:
          type: string
        officeId:
          type: string
        country:
          type: string
          description: iso 2 country code
        email:
          $ref: '#/components/schemas/ConsultantEmail'
        imageUrlThumbnail:
          type: string
          format: uri
        imageUrl:
          type: string
          format: uri
      example:
        name: Navn Navnesen
        title: Fancy IT title
        roles: [ADVISORY, ARCHITECT]
        telephone: "94000000"
        office: Trondheim
        officeId: abcdef123456
        country: 'no'
        email: navn.navnese@miles.no
        imageUrlThumbnail: somevaliduri.com/imagethumb.png
        imageUrl: somevaliduri.com/image.png
      required:
        - name
        - office
        - country
        - roles
        - email
    GetOfficesResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Office'
      required:
        - list
    Office:
      type: object
      properties:
        officeId:
          type: string
        name:
          type: string
        country:
          type: string
          description: iso 2 country code
      example:
        officeId: abcdef123456
        name: Trondheim
        country: 'no'
      required:
        - officeId
        - name
        - country
    Role:
      type: string
      enum:
        - ARCHITECTURE
        - BACKEND
        - FRONTEND
        - DATA_SCIENCE
        - DESIGN
        - PROJECT_MANAGEMENT
        - ADVISORY
        - AGILE
        - TEST_MANAGEMENT
        - SERVANT_TEAM
        - DEVELOPMENT
    ConsultantEmail:
      type: string
      format: email
# todo: uncomment after migration to openapi server generator
#  securitySchemes:
#    app_key:
#      type: http
#      scheme: bearer
#      in: header